{"ast":null,"code":"var _jsxFileName = \"/Users/shubhtastic/Documents/ionet/IoPulse/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport StrategyCard from \"./StrategyCard\";\nimport StrategyDetailView from \"./StrategyDetailView\";\nimport NotificationCard from \"./NotificationCard\";\nimport CreateStrategyModal from \"./CreateStrategyModal\";\nimport NotificationModal from \"./NotificationModal\";\nimport RecommendationModal from \"./RecommendationModal\";\nimport { strategyAPI, recommendationAPI } from \"../services/api\";\nimport { Plus, LogOut } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [selectedNotification, setSelectedNotification] = useState(null);\n  const [selectedRecommendation, setSelectedRecommendation] = useState(null);\n  const [selectedStrategy, setSelectedStrategy] = useState(null);\n  const [strategies, setStrategies] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Load strategies and recommendations from MongoDB\n  useEffect(() => {\n    loadStrategies();\n    loadRecommendations();\n  }, []);\n  const loadStrategies = async () => {\n    try {\n      setLoading(true);\n      const response = await strategyAPI.getStrategies();\n      if (response.success) {\n        setStrategies(response.data);\n      }\n    } catch (error) {\n      setError(\"Failed to load strategies\");\n      console.error(\"Load strategies error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadRecommendations = async () => {\n    try {\n      const response = await recommendationAPI.getAllRecommendations(\"pending\");\n      if (response.success) {\n        setRecommendations(response.data);\n        console.log(\"ðŸ“‹ Loaded recommendations:\", response.data);\n      }\n    } catch (error) {\n      console.error(\"Load recommendations error:\", error);\n      // Don't show error for recommendations - they might not exist yet\n    }\n  };\n  const handleCreateStrategy = async newStrategy => {\n    try {\n      const response = await strategyAPI.createStrategy(newStrategy);\n      if (response.success) {\n        setStrategies([response.data, ...strategies]);\n        setShowCreateModal(false);\n      }\n    } catch (error) {\n      console.error(\"Create strategy error:\", error);\n      // You might want to show an error message to the user here\n    }\n  };\n  const handleNotificationResponse = async updatedStrategy => {\n    // Update the strategy in the list\n    setStrategies(strategies.map(s => s._id === updatedStrategy._id ? updatedStrategy : s));\n    setSelectedNotification(null);\n  };\n  const handleRecommendationResponse = async action => {\n    // Reload recommendations to reflect the changes\n    await loadRecommendations();\n    // Optionally reload strategies if strategy was updated\n    if (action === \"obeyed\") {\n      await loadStrategies();\n    }\n    setSelectedRecommendation(null);\n  };\n  const handleStrategyCardClick = strategy => {\n    setSelectedStrategy(strategy);\n  };\n  const handleBackToDashboard = () => {\n    setSelectedStrategy(null);\n    // Refresh strategies when coming back from detail view\n    loadStrategies();\n  };\n  const handleRequestRecommendation = async strategy => {\n    // TODO: Implement actual API call to request recommendation\n    console.log(\"Requesting recommendation for strategy:\", strategy);\n    // This will be implemented later when we add the working functionality\n  };\n\n  // Simple notification handler for now\n  const addNotification = (message, type = \"info\") => {\n    console.log(`Notification [${type}]: ${message}`);\n    // In a real app, this would add to a notification state\n    // For now, just log it\n  };\n\n  // Get all pending notifications from all strategies\n  const getPendingNotifications = () => {\n    const notifications = [];\n    strategies.forEach(strategy => {\n      if (strategy.latestNotification && strategy.latestNotification.userResponse === \"pending\") {\n        notifications.push({\n          ...strategy.latestNotification,\n          strategyId: strategy._id,\n          strategyTitle: strategy.title || \"Untitled Strategy\",\n          coin: strategy.coin || \"N/A\"\n        });\n      }\n    });\n    return notifications.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  };\n  const pendingNotifications = getPendingNotifications();\n\n  // If a strategy is selected, show the detail view\n  if (selectedStrategy) {\n    return /*#__PURE__*/_jsxDEV(StrategyDetailView, {\n      strategy: selectedStrategy,\n      onBack: handleBackToDashboard,\n      onRequestRecommendation: handleRequestRecommendation,\n      addNotification: addNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: user.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: onLogout,\n          children: [/*#__PURE__*/_jsxDEV(LogOut, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), \"Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        backgroundColor: \"#ef4444\",\n        color: \"white\",\n        padding: \"12px\",\n        borderRadius: \"8px\",\n        marginBottom: \"20px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AI Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), recommendations.map(recommendation => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-item\",\n        style: {\n          backgroundColor: \"#374151\",\n          border: \"1px solid #4b5563\",\n          borderRadius: \"8px\",\n          padding: \"16px\",\n          marginBottom: \"12px\",\n          cursor: \"pointer\"\n        },\n        onClick: () => setSelectedRecommendation(recommendation),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"start\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: \"#f9fafb\",\n                marginBottom: \"8px\"\n              },\n              children: [recommendation.strategy.title, \" -\", \" \", recommendation.strategy.coin]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#d1d5db\",\n                marginBottom: \"8px\"\n              },\n              children: recommendation.explanation.length > 100 ? `${recommendation.explanation.substring(0, 100)}...` : recommendation.explanation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"16px\",\n                fontSize: \"14px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: recommendation.action === \"buy\" ? \"#10b981\" : recommendation.action === \"sell\" ? \"#ef4444\" : \"#f59e0b\"\n                },\n                children: [\"Recommendation:\", \" \", (recommendation.action || \"unknown\").toUpperCase()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#9ca3af\"\n                },\n                children: [\"Confidence:\", \" \", recommendation.confidence || 0, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#9ca3af\",\n              fontSize: \"12px\"\n            },\n            children: new Date(recommendation.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)\n      }, recommendation._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this)), pendingNotifications.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#a0a0a0\",\n          textAlign: \"center\",\n          padding: \"20px\"\n        },\n        children: \"No pending recommendations at the moment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategies-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategies-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Investment Strategies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-strategy-button\",\n          onClick: () => setShowCreateModal(true),\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), \"New Strategy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"40px\",\n          color: \"#a0a0a0\"\n        },\n        children: \"Loading strategies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategies-grid\",\n        children: strategies.map(strategy => /*#__PURE__*/_jsxDEV(StrategyCard, {\n          strategy: strategy,\n          onUpdate: loadStrategies,\n          onCardClick: handleStrategyCardClick\n        }, strategy._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this), !loading && strategies.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"40px\",\n          color: \"#a0a0a0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No strategies created yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click \\\"New Strategy\\\" to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), showCreateModal && /*#__PURE__*/_jsxDEV(CreateStrategyModal, {\n      onClose: () => setShowCreateModal(false),\n      onSubmit: handleCreateStrategy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }, this), selectedNotification && /*#__PURE__*/_jsxDEV(NotificationModal, {\n      notification: selectedNotification,\n      strategyId: selectedNotification.strategyId,\n      onClose: () => setSelectedNotification(null),\n      onResponse: handleNotificationResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }, this), selectedRecommendation && /*#__PURE__*/_jsxDEV(RecommendationModal, {\n      recommendation: selectedRecommendation,\n      onClose: () => setSelectedRecommendation(null),\n      onResponse: handleRecommendationResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"tBOY+EAG/gHbD2TUD4RRhrrz/xs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","StrategyCard","StrategyDetailView","NotificationCard","CreateStrategyModal","NotificationModal","RecommendationModal","strategyAPI","recommendationAPI","Plus","LogOut","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","showCreateModal","setShowCreateModal","selectedNotification","setSelectedNotification","selectedRecommendation","setSelectedRecommendation","selectedStrategy","setSelectedStrategy","strategies","setStrategies","recommendations","setRecommendations","loading","setLoading","error","setError","loadStrategies","loadRecommendations","response","getStrategies","success","data","console","getAllRecommendations","log","handleCreateStrategy","newStrategy","createStrategy","handleNotificationResponse","updatedStrategy","map","s","_id","handleRecommendationResponse","action","handleStrategyCardClick","strategy","handleBackToDashboard","handleRequestRecommendation","addNotification","message","type","getPendingNotifications","notifications","forEach","latestNotification","userResponse","push","strategyId","strategyTitle","title","coin","sort","a","b","Date","timestamp","pendingNotifications","onBack","onRequestRecommendation","fileName","_jsxFileName","lineNumber","columnNumber","className","children","avatar","name","onClick","size","style","backgroundColor","color","padding","borderRadius","marginBottom","recommendation","border","cursor","display","justifyContent","alignItems","explanation","length","substring","gap","fontSize","toUpperCase","confidence","createdAt","toLocaleString","textAlign","onUpdate","onCardClick","onClose","onSubmit","notification","onResponse","_c","$RefreshReg$"],"sources":["/Users/shubhtastic/Documents/ionet/IoPulse/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport StrategyCard from \"./StrategyCard\";\nimport StrategyDetailView from \"./StrategyDetailView\";\nimport NotificationCard from \"./NotificationCard\";\nimport CreateStrategyModal from \"./CreateStrategyModal\";\nimport NotificationModal from \"./NotificationModal\";\nimport RecommendationModal from \"./RecommendationModal\";\nimport { strategyAPI, recommendationAPI } from \"../services/api\";\nimport { Plus, LogOut } from \"lucide-react\";\n\nconst Dashboard = ({ user, onLogout }) => {\n    const [showCreateModal, setShowCreateModal] = useState(false);\n    const [selectedNotification, setSelectedNotification] = useState(null);\n    const [selectedRecommendation, setSelectedRecommendation] = useState(null);\n    const [selectedStrategy, setSelectedStrategy] = useState(null);\n    const [strategies, setStrategies] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    // Load strategies and recommendations from MongoDB\n    useEffect(() => {\n        loadStrategies();\n        loadRecommendations();\n    }, []);\n\n    const loadStrategies = async () => {\n        try {\n            setLoading(true);\n            const response = await strategyAPI.getStrategies();\n            if (response.success) {\n                setStrategies(response.data);\n            }\n        } catch (error) {\n            setError(\"Failed to load strategies\");\n            console.error(\"Load strategies error:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const loadRecommendations = async () => {\n        try {\n            const response = await recommendationAPI.getAllRecommendations(\n                \"pending\"\n            );\n            if (response.success) {\n                setRecommendations(response.data);\n                console.log(\"ðŸ“‹ Loaded recommendations:\", response.data);\n            }\n        } catch (error) {\n            console.error(\"Load recommendations error:\", error);\n            // Don't show error for recommendations - they might not exist yet\n        }\n    };\n\n    const handleCreateStrategy = async (newStrategy) => {\n        try {\n            const response = await strategyAPI.createStrategy(newStrategy);\n            if (response.success) {\n                setStrategies([response.data, ...strategies]);\n                setShowCreateModal(false);\n            }\n        } catch (error) {\n            console.error(\"Create strategy error:\", error);\n            // You might want to show an error message to the user here\n        }\n    };\n\n    const handleNotificationResponse = async (updatedStrategy) => {\n        // Update the strategy in the list\n        setStrategies(\n            strategies.map((s) =>\n                s._id === updatedStrategy._id ? updatedStrategy : s\n            )\n        );\n        setSelectedNotification(null);\n    };\n\n    const handleRecommendationResponse = async (action) => {\n        // Reload recommendations to reflect the changes\n        await loadRecommendations();\n        // Optionally reload strategies if strategy was updated\n        if (action === \"obeyed\") {\n            await loadStrategies();\n        }\n        setSelectedRecommendation(null);\n    };\n\n    const handleStrategyCardClick = (strategy) => {\n        setSelectedStrategy(strategy);\n    };\n\n    const handleBackToDashboard = () => {\n        setSelectedStrategy(null);\n        // Refresh strategies when coming back from detail view\n        loadStrategies();\n    };\n\n    const handleRequestRecommendation = async (strategy) => {\n        // TODO: Implement actual API call to request recommendation\n        console.log(\"Requesting recommendation for strategy:\", strategy);\n        // This will be implemented later when we add the working functionality\n    };\n\n    // Simple notification handler for now\n    const addNotification = (message, type = \"info\") => {\n        console.log(`Notification [${type}]: ${message}`);\n        // In a real app, this would add to a notification state\n        // For now, just log it\n    };\n\n    // Get all pending notifications from all strategies\n    const getPendingNotifications = () => {\n        const notifications = [];\n        strategies.forEach((strategy) => {\n            if (\n                strategy.latestNotification &&\n                strategy.latestNotification.userResponse === \"pending\"\n            ) {\n                notifications.push({\n                    ...strategy.latestNotification,\n                    strategyId: strategy._id,\n                    strategyTitle: strategy.title || \"Untitled Strategy\",\n                    coin: strategy.coin || \"N/A\",\n                });\n            }\n        });\n        return notifications.sort(\n            (a, b) => new Date(b.timestamp) - new Date(a.timestamp)\n        );\n    };\n\n    const pendingNotifications = getPendingNotifications();\n\n    // If a strategy is selected, show the detail view\n    if (selectedStrategy) {\n        return (\n            <StrategyDetailView\n                strategy={selectedStrategy}\n                onBack={handleBackToDashboard}\n                onRequestRecommendation={handleRequestRecommendation}\n                addNotification={addNotification}\n            />\n        );\n    }\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header\">\n                <h1 className=\"dashboard-title\">Dashboard</h1>\n                <div className=\"user-info\">\n                    <div className=\"user-avatar\">{user.avatar}</div>\n                    <span>Welcome, {user.name}</span>\n                    <button className=\"logout-button\" onClick={onLogout}>\n                        <LogOut size={16} />\n                        Logout\n                    </button>\n                </div>\n            </div>\n\n            {error && (\n                <div\n                    className=\"error-message\"\n                    style={{\n                        backgroundColor: \"#ef4444\",\n                        color: \"white\",\n                        padding: \"12px\",\n                        borderRadius: \"8px\",\n                        marginBottom: \"20px\",\n                    }}\n                >\n                    {error}\n                </div>\n            )}\n\n            {/* Notifications Section */}\n            <div className=\"notifications-section\">\n                <div className=\"notifications-header\">\n                    <h2>AI Recommendations</h2>\n                </div>\n                {recommendations.map((recommendation) => (\n                    <div\n                        key={recommendation._id}\n                        className=\"notification-item\"\n                        style={{\n                            backgroundColor: \"#374151\",\n                            border: \"1px solid #4b5563\",\n                            borderRadius: \"8px\",\n                            padding: \"16px\",\n                            marginBottom: \"12px\",\n                            cursor: \"pointer\",\n                        }}\n                        onClick={() =>\n                            setSelectedRecommendation(recommendation)\n                        }\n                    >\n                        <div\n                            style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"start\",\n                            }}\n                        >\n                            <div>\n                                <h4\n                                    style={{\n                                        color: \"#f9fafb\",\n                                        marginBottom: \"8px\",\n                                    }}\n                                >\n                                    {recommendation.strategy.title} -{\" \"}\n                                    {recommendation.strategy.coin}\n                                </h4>\n                                <p\n                                    style={{\n                                        color: \"#d1d5db\",\n                                        marginBottom: \"8px\",\n                                    }}\n                                >\n                                    {recommendation.explanation.length > 100\n                                        ? `${recommendation.explanation.substring(\n                                              0,\n                                              100\n                                          )}...`\n                                        : recommendation.explanation}\n                                </p>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        gap: \"16px\",\n                                        fontSize: \"14px\",\n                                    }}\n                                >\n                                    <span\n                                        style={{\n                                            color:\n                                                recommendation.action === \"buy\"\n                                                    ? \"#10b981\"\n                                                    : recommendation.action ===\n                                                      \"sell\"\n                                                    ? \"#ef4444\"\n                                                    : \"#f59e0b\",\n                                        }}\n                                    >\n                                        Recommendation:{\" \"}\n                                        {(\n                                            recommendation.action || \"unknown\"\n                                        ).toUpperCase()}\n                                    </span>\n                                    <span style={{ color: \"#9ca3af\" }}>\n                                        Confidence:{\" \"}\n                                        {recommendation.confidence || 0}%\n                                    </span>\n                                </div>\n                            </div>\n                            <span\n                                style={{ color: \"#9ca3af\", fontSize: \"12px\" }}\n                            >\n                                {new Date(\n                                    recommendation.createdAt\n                                ).toLocaleString()}\n                            </span>\n                        </div>\n                    </div>\n                ))}\n                {pendingNotifications.length === 0 && (\n                    <p\n                        style={{\n                            color: \"#a0a0a0\",\n                            textAlign: \"center\",\n                            padding: \"20px\",\n                        }}\n                    >\n                        No pending recommendations at the moment.\n                    </p>\n                )}\n            </div>\n\n            {/* Strategies Section */}\n            <div className=\"strategies-section\">\n                <div className=\"strategies-header\">\n                    <h2>Your Investment Strategies</h2>\n                    <button\n                        className=\"new-strategy-button\"\n                        onClick={() => setShowCreateModal(true)}\n                    >\n                        <Plus size={16} />\n                        New Strategy\n                    </button>\n                </div>\n\n                {loading ? (\n                    <div\n                        style={{\n                            textAlign: \"center\",\n                            padding: \"40px\",\n                            color: \"#a0a0a0\",\n                        }}\n                    >\n                        Loading strategies...\n                    </div>\n                ) : (\n                    <div className=\"strategies-grid\">\n                        {strategies.map((strategy) => (\n                            <StrategyCard\n                                key={strategy._id}\n                                strategy={strategy}\n                                onUpdate={loadStrategies}\n                                onCardClick={handleStrategyCardClick}\n                            />\n                        ))}\n                    </div>\n                )}\n\n                {!loading && strategies.length === 0 && (\n                    <div\n                        style={{\n                            textAlign: \"center\",\n                            padding: \"40px\",\n                            color: \"#a0a0a0\",\n                        }}\n                    >\n                        <p>No strategies created yet.</p>\n                        <p>Click \"New Strategy\" to get started!</p>\n                    </div>\n                )}\n            </div>\n\n            {showCreateModal && (\n                <CreateStrategyModal\n                    onClose={() => setShowCreateModal(false)}\n                    onSubmit={handleCreateStrategy}\n                />\n            )}\n\n            {selectedNotification && (\n                <NotificationModal\n                    notification={selectedNotification}\n                    strategyId={selectedNotification.strategyId}\n                    onClose={() => setSelectedNotification(null)}\n                    onResponse={handleNotificationResponse}\n                />\n            )}\n\n            {selectedRecommendation && (\n                <RecommendationModal\n                    recommendation={selectedRecommendation}\n                    onClose={() => setSelectedRecommendation(null)}\n                    onResponse={handleRecommendationResponse}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}