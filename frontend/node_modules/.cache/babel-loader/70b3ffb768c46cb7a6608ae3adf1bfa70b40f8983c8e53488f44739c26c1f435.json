{"ast":null,"code":"var _jsxFileName = \"/Users/shubhtastic/Documents/ionet/IoPulse/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport LoginPage from \"./components/LoginPage\";\nimport SignupPage from \"./components/SignupPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport { authAPI, tokenManager, userManager } from \"./services/api\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [authMode, setAuthMode] = useState(\"login\"); // 'login' or 'signup'\n  const [loading, setLoading] = useState(true);\n\n  // Check for existing authentication on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = tokenManager.getToken();\n      const storedUser = userManager.getUser();\n      if (token && storedUser) {\n        try {\n          // Verify token with backend\n          const response = await authAPI.verifyToken();\n          if (response.success) {\n            setUser(response.user);\n            setIsLoggedIn(true);\n          } else {\n            // Token invalid, clear storage\n            tokenManager.removeToken();\n            userManager.removeUser();\n          }\n        } catch (error) {\n          console.error(\"Token verification failed:\", error);\n          // Token invalid, clear storage\n          tokenManager.removeToken();\n          userManager.removeUser();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const handleLogin = userData => {\n    setUser(userData);\n    setIsLoggedIn(true);\n  };\n  const handleSignup = userData => {\n    setUser(userData);\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    // Clear tokens and user data\n    tokenManager.removeToken();\n    userManager.removeUser();\n    setUser(null);\n    setIsLoggedIn(false);\n    setAuthMode(\"login\");\n  };\n  const switchToSignup = () => {\n    setAuthMode(\"signup\");\n  };\n  const switchToLogin = () => {\n    setAuthMode(\"login\");\n  };\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"#667eea\",\n          fontSize: \"1.2rem\",\n          fontWeight: \"600\"\n        },\n        children: \"Loading IoPulse...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: !isLoggedIn ? authMode === \"login\" ? /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin,\n      onSwitchToSignup: switchToSignup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(SignupPage, {\n      onSignup: handleSignup,\n      onSwitchToLogin: switchToLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      user: user,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hCtJcHiBzXpMtQ66lpvQvlBVsRE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginPage","SignupPage","Dashboard","authAPI","tokenManager","userManager","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","user","setUser","authMode","setAuthMode","loading","setLoading","checkAuth","token","getToken","storedUser","getUser","response","verifyToken","success","removeToken","removeUser","error","console","handleLogin","userData","handleSignup","handleLogout","switchToSignup","switchToLogin","className","style","display","justifyContent","alignItems","height","children","color","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onSwitchToSignup","onSignup","onSwitchToLogin","onLogout","_c","$RefreshReg$"],"sources":["/Users/shubhtastic/Documents/ionet/IoPulse/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LoginPage from \"./components/LoginPage\";\nimport SignupPage from \"./components/SignupPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport { authAPI, tokenManager, userManager } from \"./services/api\";\nimport \"./styles/App.css\";\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [user, setUser] = useState(null);\n    const [authMode, setAuthMode] = useState(\"login\"); // 'login' or 'signup'\n    const [loading, setLoading] = useState(true);\n\n    // Check for existing authentication on app load\n    useEffect(() => {\n        const checkAuth = async () => {\n            const token = tokenManager.getToken();\n            const storedUser = userManager.getUser();\n\n            if (token && storedUser) {\n                try {\n                    // Verify token with backend\n                    const response = await authAPI.verifyToken();\n                    if (response.success) {\n                        setUser(response.user);\n                        setIsLoggedIn(true);\n                    } else {\n                        // Token invalid, clear storage\n                        tokenManager.removeToken();\n                        userManager.removeUser();\n                    }\n                } catch (error) {\n                    console.error(\"Token verification failed:\", error);\n                    // Token invalid, clear storage\n                    tokenManager.removeToken();\n                    userManager.removeUser();\n                }\n            }\n            setLoading(false);\n        };\n\n        checkAuth();\n    }, []);\n\n    const handleLogin = (userData) => {\n        setUser(userData);\n        setIsLoggedIn(true);\n    };\n\n    const handleSignup = (userData) => {\n        setUser(userData);\n        setIsLoggedIn(true);\n    };\n\n    const handleLogout = () => {\n        // Clear tokens and user data\n        tokenManager.removeToken();\n        userManager.removeUser();\n        setUser(null);\n        setIsLoggedIn(false);\n        setAuthMode(\"login\");\n    };\n\n    const switchToSignup = () => {\n        setAuthMode(\"signup\");\n    };\n\n    const switchToLogin = () => {\n        setAuthMode(\"login\");\n    };\n\n    // Show loading spinner while checking authentication\n    if (loading) {\n        return (\n            <div\n                className=\"app\"\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100vh\",\n                }}\n            >\n                <div\n                    style={{\n                        color: \"#667eea\",\n                        fontSize: \"1.2rem\",\n                        fontWeight: \"600\",\n                    }}\n                >\n                    Loading IoPulse...\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"app\">\n            {!isLoggedIn ? (\n                authMode === \"login\" ? (\n                    <LoginPage\n                        onLogin={handleLogin}\n                        onSwitchToSignup={switchToSignup}\n                    />\n                ) : (\n                    <SignupPage\n                        onSignup={handleSignup}\n                        onSwitchToLogin={switchToLogin}\n                    />\n                )\n            ) : (\n                <Dashboard user={user} onLogout={handleLogout} />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}