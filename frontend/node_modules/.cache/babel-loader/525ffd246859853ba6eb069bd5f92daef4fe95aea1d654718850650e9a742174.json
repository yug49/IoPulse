{"ast":null,"code":"var _jsxFileName = \"/Users/shubhtastic/Documents/ionet/IoPulse/frontend/src/components/StrategyDetailView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ArrowLeft, Play, Clock, CheckCircle, AlertCircle, Coins, TrendingUp, DollarSign, Activity, Target, Zap } from \"lucide-react\";\nimport HistoryTab from \"./HistoryTab\";\nimport { historyAPI } from \"../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:5001\";\nconst StrategyDetailView = ({\n  strategy,\n  onBack,\n  onRequestRecommendation,\n  addNotification\n}) => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [history, setHistory] = useState([]);\n  const [historyLoading, setHistoryLoading] = useState(false);\n  const [historyPage, setHistoryPage] = useState(1);\n  const [hasMoreHistory, setHasMoreHistory] = useState(true);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [processSteps, setProcessSteps] = useState([{\n    id: 1,\n    name: \"Investor Profile Agent\",\n    status: \"pending\",\n    description: \"Analyzes strategy and converts to structured investment profile\",\n    timestamp: null\n  }, {\n    id: 2,\n    name: \"Market Screener Agent\",\n    status: \"pending\",\n    description: \"Screens market for investment candidates based on profile\",\n    timestamp: null\n  }, {\n    id: 3,\n    name: \"Quantitative Analysis Agent\",\n    status: \"pending\",\n    description: \"Mathematical models and quantitative scoring\",\n    timestamp: null\n  }, {\n    id: 4,\n    name: \"Qualitative Due Diligence Agent\",\n    status: \"pending\",\n    description: \"Fundamental analysis and risk assessment\",\n    timestamp: null\n  }, {\n    id: 5,\n    name: \"Investment Committee Agent\",\n    status: \"pending\",\n    description: \"Final investment decision and recommendation\",\n    timestamp: null\n  }]);\n  const [agentOutputs, setAgentOutputs] = useState([{\n    id: 1,\n    name: \"Investor Profile Agent\",\n    status: \"pending\",\n    output: \"\",\n    timestamp: null\n  }, {\n    id: 2,\n    name: \"Market Screener Agent\",\n    status: \"pending\",\n    output: \"\",\n    timestamp: null\n  }, {\n    id: 3,\n    name: \"Quantitative Analysis Agent\",\n    status: \"pending\",\n    output: \"\",\n    timestamp: null\n  }, {\n    id: 4,\n    name: \"Qualitative Due Diligence Agent\",\n    status: \"pending\",\n    output: \"\",\n    timestamp: null\n  }, {\n    id: 5,\n    name: \"Investment Committee Agent\",\n    status: \"pending\",\n    output: \"\",\n    timestamp: null\n  }]);\n  const [finalRecommendation, setFinalRecommendation] = useState(null);\n\n  // Load strategy history\n  const loadHistory = async (page = 1, reset = false) => {\n    try {\n      setHistoryLoading(true);\n      const response = await historyAPI.getStrategyHistory(strategy._id || strategy.id, page, 20 // limit\n      );\n      if (response.success) {\n        if (reset) {\n          setHistory(response.data);\n        } else {\n          setHistory(prev => [...prev, ...response.data]);\n        }\n        setHasMoreHistory(response.pagination.currentPage < response.pagination.totalPages);\n        setHistoryPage(page);\n      }\n    } catch (error) {\n      console.error(\"Error loading history:\", error);\n    } finally {\n      setHistoryLoading(false);\n    }\n  };\n\n  // Load more history entries\n  const loadMoreHistory = () => {\n    if (!historyLoading && hasMoreHistory) {\n      loadHistory(historyPage + 1, false);\n    }\n  };\n\n  // Load history when tab is opened for the first time\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n    if (tab === \"history\" && history.length === 0) {\n      loadHistory(1, true);\n    }\n  };\n  const handleRequestRecommendation = async () => {\n    setIsProcessing(true);\n    setFinalRecommendation(null);\n    setError(null);\n\n    // Reset all agents to pending\n    setProcessSteps(prev => prev.map(step => ({\n      ...step,\n      status: \"pending\"\n    })));\n    setAgentOutputs(prev => prev.map(agent => ({\n      ...agent,\n      status: \"pending\",\n      output: \"\",\n      timestamp: null\n    })));\n    try {\n      // Create EventSource for real-time updates with token in query params\n      const token = localStorage.getItem(\"token\");\n      const eventSource = new EventSource(`${API_BASE_URL}/api/ai-recommendations/${strategy._id || strategy.id}/request-stream?token=${encodeURIComponent(token)}`);\n      eventSource.onmessage = event => {\n        const data = JSON.parse(event.data);\n        switch (data.type) {\n          case \"init\":\n            console.log(\"Workflow initialized:\", data.message);\n            break;\n          case \"agent_start\":\n            console.log(`Agent starting: ${data.agent}`);\n            // Find and update the specific agent that's starting\n            setProcessSteps(prev => prev.map((step, index) => {\n              if (step.name === data.agent) {\n                return {\n                  ...step,\n                  status: \"processing\",\n                  timestamp: new Date().toISOString()\n                };\n              }\n              return step;\n            }));\n            setAgentOutputs(prev => prev.map((agent, index) => {\n              if (agent.name === data.agent) {\n                return {\n                  ...agent,\n                  status: \"processing\",\n                  output: data.message,\n                  timestamp: new Date().toISOString()\n                };\n              }\n              return agent;\n            }));\n            break;\n          case \"agent_complete\":\n            console.log(`Agent completed: ${data.agent}`);\n            // Update the completed agent\n            setProcessSteps(prev => prev.map((step, index) => {\n              if (step.name === data.agent) {\n                return {\n                  ...step,\n                  status: \"completed\"\n                };\n              }\n              return step;\n            }));\n            setAgentOutputs(prev => prev.map((agent, index) => {\n              if (agent.name === data.agent) {\n                // Create detailed output based on agent type and actual data\n                let detailedOutput = `‚úÖ ${data.message}\\n\\nExecution time: ${data.time}ms`;\n\n                // Add specific output based on agent type\n                if (data.output) {\n                  switch (data.agent) {\n                    case \"Investor Profile Agent\":\n                      if (data.output.risk_tolerance && data.output.investment_timeframe) {\n                        detailedOutput += `\\n\\nüéØ Profile Created:\n‚Ä¢ Risk Tolerance: ${data.output.risk_tolerance}\n‚Ä¢ Investment Timeframe: ${data.output.investment_timeframe}\n‚Ä¢ Focus Area: ${data.output.focus_area || \"General Investment\"}\n‚Ä¢ Investment Goal: ${data.output.investment_goal || \"Growth\"}`;\n                      }\n                      break;\n                    case \"Market Screener Agent\":\n                      if (Array.isArray(data.output)) {\n                        detailedOutput += `\\n\\nüîç Market Screening Results:\n‚Ä¢ Total Candidates Found: ${data.output.length}\n‚Ä¢ Top Candidates: ${data.output.slice(0, 5).join(\", \")}\n‚Ä¢ Screening Criteria: Risk-adjusted performance`;\n                      }\n                      break;\n                    case \"Quantitative Analysis Agent\":\n                      if (Array.isArray(data.output)) {\n                        const topCandidates = data.output.filter(coin => coin.quant_score !== undefined).slice(0, 3);\n                        if (topCandidates.length > 0) {\n                          detailedOutput += `\\n\\nüìä Quantitative Analysis:\n${topCandidates.map((coin, idx) => `${idx + 1}. ${coin.symbol}: Score ${coin.quant_score}/10 (24h: ${coin[\"24h_change\"] || \"N/A\"}%)`).join(\"\\n\")}\n\nüìà Analysis Methods:\n‚Ä¢ Historical performance metrics\n‚Ä¢ Volatility assessment\n‚Ä¢ Risk-adjusted returns`;\n                        }\n                      }\n                      break;\n                    case \"Qualitative Due Diligence Agent\":\n                      if (Array.isArray(data.output)) {\n                        const qualCandidates = data.output.filter(coin => coin.qualitative_score !== undefined).slice(0, 3);\n                        if (qualCandidates.length > 0) {\n                          detailedOutput += `\\n\\nüîç Due Diligence Assessment:\n${qualCandidates.map((coin, idx) => `${idx + 1}. ${coin.symbol}: Qual Score ${coin.qualitative_score}/10`).join(\"\\n\")}\n\nüõ°Ô∏è Assessment Areas:\n‚Ä¢ Fundamental analysis\n‚Ä¢ Risk evaluation\n‚Ä¢ Market sentiment\n‚Ä¢ Technology assessment`;\n                        }\n                      }\n                      break;\n                  }\n                }\n                return {\n                  ...agent,\n                  status: \"completed\",\n                  output: detailedOutput,\n                  timestamp: new Date().toISOString()\n                };\n              }\n              return agent;\n            }));\n            break;\n          case \"complete\":\n            console.log(\"Workflow completed:\", data);\n            // Handle final completion\n            const finalRec = data.data.recommendation;\n\n            // Update final recommendation\n            setFinalRecommendation({\n              action: finalRec.recommendation.toLowerCase().includes(\"don't swap\") ? \"HOLD\" : finalRec.recommendation.toLowerCase().includes(\"swap\") ? \"SWAP\" : \"HOLD\",\n              confidence: 85,\n              summary: finalRec.explanation,\n              timestamp: new Date().toISOString(),\n              executionTime: data.data.executionTime,\n              agentsUsed: data.data.agentsExecuted\n            });\n\n            // Update the final agent with real output\n            setAgentOutputs(prev => prev.map(agent => {\n              if (agent.name === \"Investment Committee Agent\") {\n                return {\n                  ...agent,\n                  status: \"completed\",\n                  output: `üèõÔ∏è Investment Committee Analysis:\n\nüìä Final Recommendation: ${finalRec.recommendation}\n\nüí° Investment Decision Summary:\n${finalRec.explanation}\n\n‚è±Ô∏è Analysis completed in ${data.data.executionTime}ms using ${data.data.agentsExecuted} AI agents.`\n                };\n              }\n              return agent;\n            }));\n            addNotification(`New recommendation generated for ${strategy.name}`, \"success\");\n            break;\n          case \"error\":\n            console.error(\"Workflow error:\", data);\n            setError(data.message);\n\n            // Mark all processing agents as failed\n            setProcessSteps(prev => prev.map(step => ({\n              ...step,\n              status: step.status === \"processing\" ? \"error\" : step.status\n            })));\n            setAgentOutputs(prev => prev.map(agent => ({\n              ...agent,\n              status: agent.status === \"processing\" ? \"error\" : agent.status,\n              output: agent.status === \"processing\" ? `‚ùå ${data.message}` : agent.output\n            })));\n            break;\n          case \"end\":\n            console.log(\"Workflow stream ended\");\n            eventSource.close();\n            setIsProcessing(false);\n            break;\n          default:\n            console.log(\"Unknown message type:\", data.type);\n            break;\n        }\n      };\n      eventSource.onerror = error => {\n        console.error(\"EventSource error:\", error);\n        eventSource.close();\n        setIsProcessing(false);\n        setError(\"Connection to server lost. Please try again.\");\n\n        // Mark all processing agents as failed\n        setProcessSteps(prev => prev.map(step => ({\n          ...step,\n          status: step.status === \"processing\" ? \"connectivity_error\" : step.status\n        })));\n        setAgentOutputs(prev => prev.map(agent => ({\n          ...agent,\n          status: agent.status === \"processing\" ? \"connectivity_error\" : agent.status,\n          output: agent.status === \"processing\" ? \"üåê Connection lost during processing\" : agent.output\n        })));\n      };\n    } catch (error) {\n      console.error(\"Error setting up real-time connection:\", error);\n      setError(\"Failed to connect to AI service\");\n      setIsProcessing(false);\n    }\n\n    // Call the parent callback if provided\n    if (onRequestRecommendation) {\n      onRequestRecommendation(strategy);\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case \"completed\":\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 20,\n          style: {\n            color: \"#10b981\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 24\n        }, this);\n      case \"processing\":\n        return /*#__PURE__*/_jsxDEV(Activity, {\n          size: 20,\n          style: {\n            color: \"#3b82f6\"\n          },\n          className: \"pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this);\n      case \"connectivity_error\":\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 20,\n          style: {\n            color: \"#f59e0b\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 24\n        }, this);\n      case \"error\":\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 20,\n          style: {\n            color: \"#ef4444\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          size: 20,\n          style: {\n            color: \"#6b7280\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case \"completed\":\n        return \"#10b981\";\n      case \"processing\":\n        return \"#3b82f6\";\n      case \"connectivity_error\":\n        return \"#f59e0b\";\n      case \"error\":\n        return \"#ef4444\";\n      default:\n        return \"#6b7280\";\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    return new Date(dateString).toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"strategy-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategy-detail-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"back-button\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }, this), \"Back to Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"strategy-detail-title\",\n        children: strategy.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-banner\",\n      style: {\n        backgroundColor: error.includes(\"üåê\") || error.includes(\"‚è≥\") ? \"#f59e0b\" : \"#ef4444\",\n        color: \"white\",\n        padding: \"16px 20px\",\n        borderRadius: \"12px\",\n        margin: \"16px 0\",\n        whiteSpace: \"pre-wrap\",\n        fontSize: \"14px\",\n        lineHeight: \"1.6\",\n        border: error.includes(\"üåê\") || error.includes(\"‚è≥\") ? \"2px solid #fbbf24\" : \"2px solid #f87171\",\n        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          gap: \"12px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"18px\",\n            marginTop: \"2px\"\n          },\n          children: error.includes(\"üåê\") ? \"üåê\" : error.includes(\"‚è≥\") ? \"‚è≥\" : error.includes(\"üîë\") ? \"üîë\" : \"‚ö†Ô∏è\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [error, (error.includes(\"üåê\") || error.includes(\"‚è≥\")) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"12px\",\n              fontSize: \"13px\",\n              opacity: 0.9,\n              fontStyle: \"italic\"\n            },\n            children: \"\\uD83D\\uDCA1 This is usually a temporary issue. The AI services may be experiencing high load or connectivity problems.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategy-detail-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategy-detail-main-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"process-flow-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"process-flow-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Process Flow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRequestRecommendation,\n              disabled: isProcessing,\n              className: \"request-recommendation-button\",\n              style: {\n                opacity: isProcessing ? 0.6 : 1,\n                cursor: isProcessing ? \"not-allowed\" : \"pointer\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Play, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 33\n              }, this), isProcessing ? \"Processing...\" : \"Request Recommendation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"process-flow-content\",\n            children: processSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"process-step\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"process-step-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"step-number\",\n                  style: {\n                    backgroundColor: getStatusColor(step.status),\n                    color: step.status === \"pending\" ? \"#6b7280\" : \"white\"\n                  },\n                  children: step.status === \"pending\" ? step.id : getStatusIcon(step.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 41\n                }, this), index < processSteps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"step-connector\",\n                  style: {\n                    backgroundColor: step.status === \"completed\" ? \"#10b981\" : \"#374151\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"process-step-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"step-title\",\n                  children: step.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"step-description\",\n                  children: step.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 41\n                }, this), step.timestamp && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"step-timestamp\",\n                  children: [step.status === \"processing\" ? \"Started: \" : \"Completed: \", formatDate(step.timestamp)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 45\n                }, this), step.status === \"processing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"processing-indicator\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"processing-bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"processing-bar-fill\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 686,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 37\n              }, this)]\n            }, step.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-output-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-output-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"AI Agent Outputs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-outputs-container\",\n            children: agentOutputs.map(agent => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `agent-output-item ${agent.status}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"agent-output-title\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [getStatusIcon(agent.status), agent.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `agent-status-badge ${agent.status}`,\n                  children: agent.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"agent-output-content\",\n                children: agent.status === \"processing\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Analyzing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"typing-dots\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"typing-dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"typing-dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"typing-dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 727,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 724,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 45\n                }, this) : agent.output ? /*#__PURE__*/_jsxDEV(\"pre\", {\n                  style: {\n                    whiteSpace: \"pre-wrap\",\n                    fontFamily: \"inherit\",\n                    margin: 0,\n                    fontSize: \"13px\",\n                    lineHeight: \"1.4\"\n                  },\n                  children: agent.output\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"agent-output-content empty\",\n                  children: \"Waiting for analysis to begin...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 37\n              }, this), agent.timestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"agent-output-timestamp\",\n                children: [agent.status === \"processing\" ? \"Started: \" : \"Completed: \", formatDate(agent.timestamp)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 41\n              }, this)]\n            }, agent.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strategy-info-column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"strategy-info-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Strategy Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"strategy-info-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-label\",\n                  children: [/*#__PURE__*/_jsxDEV(Coins, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 41\n                  }, this), \"Asset\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-value\",\n                  children: strategy.coin\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-label\",\n                  children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 780,\n                    columnNumber: 41\n                  }, this), \"Amount\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-value\",\n                  children: [strategy.currentAmount, \" \", strategy.coin]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-label\",\n                  children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 790,\n                    columnNumber: 41\n                  }, this), \"Status\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-value\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-badge\",\n                    style: {\n                      backgroundColor: strategy.status === \"active\" ? \"#10b981\" : strategy.status === \"paused\" ? \"#f59e0b\" : \"#ef4444\",\n                      color: \"white\",\n                      padding: \"4px 8px\",\n                      borderRadius: \"12px\",\n                      fontSize: \"12px\",\n                      textTransform: \"capitalize\"\n                    },\n                    children: strategy.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 794,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-label\",\n                  children: [/*#__PURE__*/_jsxDEV(Clock, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 41\n                  }, this), \"Created\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-value\",\n                  children: formatDate(strategy.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"strategy-description-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"strategy-description-text\",\n                children: strategy.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 29\n            }, this), strategy.lastObeyedRecommendation && strategy.lastObeyedRecommendation.message !== \"No recommendations followed yet\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"last-recommendation\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Last Recommendation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recommendation-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: strategy.lastObeyedRecommendation.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"recommendation-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"recommendation-type\",\n                    style: {\n                      color: strategy.lastObeyedRecommendation.recommendation === \"buy\" ? \"#10b981\" : strategy.lastObeyedRecommendation.recommendation === \"sell\" ? \"#ef4444\" : \"#f59e0b\"\n                    },\n                    children: (strategy.lastObeyedRecommendation.recommendation || \"\").toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"recommendation-date\",\n                    children: formatDate(strategy.lastObeyedRecommendation.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategy-detail-bottom-panel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-output-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-output-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(Target, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 33\n              }, this), \"Final Investment Recommendation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `final-output-status ${finalRecommendation ? \"ready\" : \"waiting\"}`,\n              children: finalRecommendation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 41\n                }, this), \"Ready\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 908,\n                  columnNumber: 41\n                }, this), \"Waiting for Analysis\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 25\n          }, this), finalRecommendation ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-output-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"final-recommendation-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [/*#__PURE__*/_jsxDEV(Zap, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 41\n                }, this), \"Investment Decision\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recommendation-decision\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `decision-action ${finalRecommendation.action.toLowerCase()}`,\n                  children: finalRecommendation.action\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"decision-confidence\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"confidence-score\",\n                    children: [finalRecommendation.confidence, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 931,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"confidence-label\",\n                    children: \"Confidence\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 935,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 930,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"recommendation-summary-text\",\n                children: finalRecommendation.summary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 37\n              }, this), finalRecommendation.executionTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"execution-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Execution Time:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 948,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-value\",\n                    children: [finalRecommendation.executionTime, \"ms\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 951,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 947,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-label\",\n                    children: \"Agents Used:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 959,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-value\",\n                    children: finalRecommendation.agentsUsed\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 962,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-output-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                gridColumn: \"1 / -1\",\n                textAlign: \"center\",\n                padding: \"40px\",\n                color: \"#9ca3af\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                size: 48,\n                style: {\n                  marginBottom: \"16px\",\n                  opacity: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  marginBottom: \"8px\",\n                  color: \"#d1d5db\"\n                },\n                children: \"Waiting for AI Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Click \\\"Request Recommendation\\\" to start the analysis process. The final recommendation will appear here once all agents complete their analysis.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 29\n          }, this), finalRecommendation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-output-timestamp\",\n            children: [\"Analysis completed on\", \" \", formatDate(finalRecommendation.timestamp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 539,\n    columnNumber: 9\n  }, this);\n};\n_s(StrategyDetailView, \"dRCdK4mdBCAwHEU0veCXCHQ6p6M=\");\n_c = StrategyDetailView;\nexport default StrategyDetailView;\nvar _c;\n$RefreshReg$(_c, \"StrategyDetailView\");","map":{"version":3,"names":["React","useState","ArrowLeft","Play","Clock","CheckCircle","AlertCircle","Coins","TrendingUp","DollarSign","Activity","Target","Zap","HistoryTab","historyAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","StrategyDetailView","strategy","onBack","onRequestRecommendation","addNotification","_s","activeTab","setActiveTab","history","setHistory","historyLoading","setHistoryLoading","historyPage","setHistoryPage","hasMoreHistory","setHasMoreHistory","isProcessing","setIsProcessing","error","setError","processSteps","setProcessSteps","id","name","status","description","timestamp","agentOutputs","setAgentOutputs","output","finalRecommendation","setFinalRecommendation","loadHistory","page","reset","response","getStrategyHistory","_id","success","data","prev","pagination","currentPage","totalPages","console","loadMoreHistory","handleTabChange","tab","length","handleRequestRecommendation","map","step","agent","token","localStorage","getItem","eventSource","EventSource","encodeURIComponent","onmessage","event","JSON","parse","type","log","message","index","Date","toISOString","detailedOutput","time","risk_tolerance","investment_timeframe","focus_area","investment_goal","Array","isArray","slice","join","topCandidates","filter","coin","quant_score","undefined","idx","symbol","qualCandidates","qualitative_score","finalRec","recommendation","action","toLowerCase","includes","confidence","summary","explanation","executionTime","agentsUsed","agentsExecuted","close","onerror","getStatusIcon","size","style","color","fileName","_jsxFileName","lineNumber","columnNumber","className","getStatusColor","formatDate","dateString","toLocaleString","children","onClick","title","backgroundColor","padding","borderRadius","margin","whiteSpace","fontSize","lineHeight","border","boxShadow","display","alignItems","gap","marginTop","flex","opacity","fontStyle","disabled","cursor","fontFamily","currentAmount","textTransform","createdAt","lastObeyedRecommendation","toUpperCase","gridColumn","textAlign","marginBottom","_c","$RefreshReg$"],"sources":["/Users/shubhtastic/Documents/ionet/IoPulse/frontend/src/components/StrategyDetailView.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n    ArrowLeft,\n    Play,\n    Clock,\n    CheckCircle,\n    AlertCircle,\n    Coins,\n    TrendingUp,\n    DollarSign,\n    Activity,\n    Target,\n    Zap,\n} from \"lucide-react\";\nimport HistoryTab from \"./HistoryTab\";\nimport { historyAPI } from \"../services/api\";\n\nconst API_BASE_URL = \"http://localhost:5001\";\n\nconst StrategyDetailView = ({\n    strategy,\n    onBack,\n    onRequestRecommendation,\n    addNotification,\n}) => {\n    const [activeTab, setActiveTab] = useState(\"overview\");\n    const [history, setHistory] = useState([]);\n    const [historyLoading, setHistoryLoading] = useState(false);\n    const [historyPage, setHistoryPage] = useState(1);\n    const [hasMoreHistory, setHasMoreHistory] = useState(true);\n    \n    const [isProcessing, setIsProcessing] = useState(false);\n    const [error, setError] = useState(null);\n    const [processSteps, setProcessSteps] = useState([\n        {\n            id: 1,\n            name: \"Investor Profile Agent\",\n            status: \"pending\",\n            description:\n                \"Analyzes strategy and converts to structured investment profile\",\n            timestamp: null,\n        },\n        {\n            id: 2,\n            name: \"Market Screener Agent\",\n            status: \"pending\",\n            description:\n                \"Screens market for investment candidates based on profile\",\n            timestamp: null,\n        },\n        {\n            id: 3,\n            name: \"Quantitative Analysis Agent\",\n            status: \"pending\",\n            description: \"Mathematical models and quantitative scoring\",\n            timestamp: null,\n        },\n        {\n            id: 4,\n            name: \"Qualitative Due Diligence Agent\",\n            status: \"pending\",\n            description: \"Fundamental analysis and risk assessment\",\n            timestamp: null,\n        },\n        {\n            id: 5,\n            name: \"Investment Committee Agent\",\n            status: \"pending\",\n            description: \"Final investment decision and recommendation\",\n            timestamp: null,\n        },\n    ]);\n\n    const [agentOutputs, setAgentOutputs] = useState([\n        {\n            id: 1,\n            name: \"Investor Profile Agent\",\n            status: \"pending\",\n            output: \"\",\n            timestamp: null,\n        },\n        {\n            id: 2,\n            name: \"Market Screener Agent\",\n            status: \"pending\",\n            output: \"\",\n            timestamp: null,\n        },\n        {\n            id: 3,\n            name: \"Quantitative Analysis Agent\",\n            status: \"pending\",\n            output: \"\",\n            timestamp: null,\n        },\n        {\n            id: 4,\n            name: \"Qualitative Due Diligence Agent\",\n            status: \"pending\",\n            output: \"\",\n            timestamp: null,\n        },\n        {\n            id: 5,\n            name: \"Investment Committee Agent\",\n            status: \"pending\",\n            output: \"\",\n            timestamp: null,\n        },\n    ]);\n\n    const [finalRecommendation, setFinalRecommendation] = useState(null);\n\n    // Load strategy history\n    const loadHistory = async (page = 1, reset = false) => {\n        try {\n            setHistoryLoading(true);\n            const response = await historyAPI.getStrategyHistory(\n                strategy._id || strategy.id,\n                page,\n                20 // limit\n            );\n            \n            if (response.success) {\n                if (reset) {\n                    setHistory(response.data);\n                } else {\n                    setHistory(prev => [...prev, ...response.data]);\n                }\n                \n                setHasMoreHistory(\n                    response.pagination.currentPage < response.pagination.totalPages\n                );\n                setHistoryPage(page);\n            }\n        } catch (error) {\n            console.error(\"Error loading history:\", error);\n        } finally {\n            setHistoryLoading(false);\n        }\n    };\n\n    // Load more history entries\n    const loadMoreHistory = () => {\n        if (!historyLoading && hasMoreHistory) {\n            loadHistory(historyPage + 1, false);\n        }\n    };\n\n    // Load history when tab is opened for the first time\n    const handleTabChange = (tab) => {\n        setActiveTab(tab);\n        if (tab === \"history\" && history.length === 0) {\n            loadHistory(1, true);\n        }\n    };\n\n    const handleRequestRecommendation = async () => {\n        setIsProcessing(true);\n        setFinalRecommendation(null);\n        setError(null);\n\n        // Reset all agents to pending\n        setProcessSteps((prev) =>\n            prev.map((step) => ({\n                ...step,\n                status: \"pending\",\n            }))\n        );\n\n        setAgentOutputs((prev) =>\n            prev.map((agent) => ({\n                ...agent,\n                status: \"pending\",\n                output: \"\",\n                timestamp: null,\n            }))\n        );\n\n        try {\n            // Create EventSource for real-time updates with token in query params\n            const token = localStorage.getItem(\"token\");\n            const eventSource = new EventSource(\n                `${API_BASE_URL}/api/ai-recommendations/${\n                    strategy._id || strategy.id\n                }/request-stream?token=${encodeURIComponent(token)}`\n            );\n\n            eventSource.onmessage = (event) => {\n                const data = JSON.parse(event.data);\n\n                switch (data.type) {\n                    case \"init\":\n                        console.log(\"Workflow initialized:\", data.message);\n                        break;\n\n                    case \"agent_start\":\n                        console.log(`Agent starting: ${data.agent}`);\n                        // Find and update the specific agent that's starting\n                        setProcessSteps((prev) =>\n                            prev.map((step, index) => {\n                                if (step.name === data.agent) {\n                                    return {\n                                        ...step,\n                                        status: \"processing\",\n                                        timestamp: new Date().toISOString(),\n                                    };\n                                }\n                                return step;\n                            })\n                        );\n\n                        setAgentOutputs((prev) =>\n                            prev.map((agent, index) => {\n                                if (agent.name === data.agent) {\n                                    return {\n                                        ...agent,\n                                        status: \"processing\",\n                                        output: data.message,\n                                        timestamp: new Date().toISOString(),\n                                    };\n                                }\n                                return agent;\n                            })\n                        );\n                        break;\n\n                    case \"agent_complete\":\n                        console.log(`Agent completed: ${data.agent}`);\n                        // Update the completed agent\n                        setProcessSteps((prev) =>\n                            prev.map((step, index) => {\n                                if (step.name === data.agent) {\n                                    return {\n                                        ...step,\n                                        status: \"completed\",\n                                    };\n                                }\n                                return step;\n                            })\n                        );\n\n                        setAgentOutputs((prev) =>\n                            prev.map((agent, index) => {\n                                if (agent.name === data.agent) {\n                                    // Create detailed output based on agent type and actual data\n                                    let detailedOutput = `‚úÖ ${data.message}\\n\\nExecution time: ${data.time}ms`;\n\n                                    // Add specific output based on agent type\n                                    if (data.output) {\n                                        switch (data.agent) {\n                                            case \"Investor Profile Agent\":\n                                                if (\n                                                    data.output\n                                                        .risk_tolerance &&\n                                                    data.output\n                                                        .investment_timeframe\n                                                ) {\n                                                    detailedOutput += `\\n\\nüéØ Profile Created:\n‚Ä¢ Risk Tolerance: ${data.output.risk_tolerance}\n‚Ä¢ Investment Timeframe: ${data.output.investment_timeframe}\n‚Ä¢ Focus Area: ${data.output.focus_area || \"General Investment\"}\n‚Ä¢ Investment Goal: ${data.output.investment_goal || \"Growth\"}`;\n                                                }\n                                                break;\n\n                                            case \"Market Screener Agent\":\n                                                if (\n                                                    Array.isArray(data.output)\n                                                ) {\n                                                    detailedOutput += `\\n\\nüîç Market Screening Results:\n‚Ä¢ Total Candidates Found: ${data.output.length}\n‚Ä¢ Top Candidates: ${data.output.slice(0, 5).join(\", \")}\n‚Ä¢ Screening Criteria: Risk-adjusted performance`;\n                                                }\n                                                break;\n\n                                            case \"Quantitative Analysis Agent\":\n                                                if (\n                                                    Array.isArray(data.output)\n                                                ) {\n                                                    const topCandidates =\n                                                        data.output\n                                                            .filter(\n                                                                (coin) =>\n                                                                    coin.quant_score !==\n                                                                    undefined\n                                                            )\n                                                            .slice(0, 3);\n                                                    if (\n                                                        topCandidates.length > 0\n                                                    ) {\n                                                        detailedOutput += `\\n\\nüìä Quantitative Analysis:\n${topCandidates\n    .map(\n        (coin, idx) =>\n            `${idx + 1}. ${coin.symbol}: Score ${coin.quant_score}/10 (24h: ${\n                coin[\"24h_change\"] || \"N/A\"\n            }%)`\n    )\n    .join(\"\\n\")}\n\nüìà Analysis Methods:\n‚Ä¢ Historical performance metrics\n‚Ä¢ Volatility assessment\n‚Ä¢ Risk-adjusted returns`;\n                                                    }\n                                                }\n                                                break;\n\n                                            case \"Qualitative Due Diligence Agent\":\n                                                if (\n                                                    Array.isArray(data.output)\n                                                ) {\n                                                    const qualCandidates =\n                                                        data.output\n                                                            .filter(\n                                                                (coin) =>\n                                                                    coin.qualitative_score !==\n                                                                    undefined\n                                                            )\n                                                            .slice(0, 3);\n                                                    if (\n                                                        qualCandidates.length >\n                                                        0\n                                                    ) {\n                                                        detailedOutput += `\\n\\nüîç Due Diligence Assessment:\n${qualCandidates\n    .map(\n        (coin, idx) =>\n            `${idx + 1}. ${coin.symbol}: Qual Score ${\n                coin.qualitative_score\n            }/10`\n    )\n    .join(\"\\n\")}\n\nüõ°Ô∏è Assessment Areas:\n‚Ä¢ Fundamental analysis\n‚Ä¢ Risk evaluation\n‚Ä¢ Market sentiment\n‚Ä¢ Technology assessment`;\n                                                    }\n                                                }\n                                                break;\n                                        }\n                                    }\n\n                                    return {\n                                        ...agent,\n                                        status: \"completed\",\n                                        output: detailedOutput,\n                                        timestamp: new Date().toISOString(),\n                                    };\n                                }\n                                return agent;\n                            })\n                        );\n                        break;\n\n                    case \"complete\":\n                        console.log(\"Workflow completed:\", data);\n                        // Handle final completion\n                        const finalRec = data.data.recommendation;\n\n                        // Update final recommendation\n                        setFinalRecommendation({\n                            action: finalRec.recommendation\n                                .toLowerCase()\n                                .includes(\"don't swap\")\n                                ? \"HOLD\"\n                                : finalRec.recommendation\n                                      .toLowerCase()\n                                      .includes(\"swap\")\n                                ? \"SWAP\"\n                                : \"HOLD\",\n                            confidence: 85,\n                            summary: finalRec.explanation,\n                            timestamp: new Date().toISOString(),\n                            executionTime: data.data.executionTime,\n                            agentsUsed: data.data.agentsExecuted,\n                        });\n\n                        // Update the final agent with real output\n                        setAgentOutputs((prev) =>\n                            prev.map((agent) => {\n                                if (\n                                    agent.name === \"Investment Committee Agent\"\n                                ) {\n                                    return {\n                                        ...agent,\n                                        status: \"completed\",\n                                        output: `üèõÔ∏è Investment Committee Analysis:\n\nüìä Final Recommendation: ${finalRec.recommendation}\n\nüí° Investment Decision Summary:\n${finalRec.explanation}\n\n‚è±Ô∏è Analysis completed in ${data.data.executionTime}ms using ${data.data.agentsExecuted} AI agents.`,\n                                    };\n                                }\n                                return agent;\n                            })\n                        );\n\n                        addNotification(\n                            `New recommendation generated for ${strategy.name}`,\n                            \"success\"\n                        );\n                        break;\n\n                    case \"error\":\n                        console.error(\"Workflow error:\", data);\n                        setError(data.message);\n\n                        // Mark all processing agents as failed\n                        setProcessSteps((prev) =>\n                            prev.map((step) => ({\n                                ...step,\n                                status:\n                                    step.status === \"processing\"\n                                        ? \"error\"\n                                        : step.status,\n                            }))\n                        );\n\n                        setAgentOutputs((prev) =>\n                            prev.map((agent) => ({\n                                ...agent,\n                                status:\n                                    agent.status === \"processing\"\n                                        ? \"error\"\n                                        : agent.status,\n                                output:\n                                    agent.status === \"processing\"\n                                        ? `‚ùå ${data.message}`\n                                        : agent.output,\n                            }))\n                        );\n                        break;\n\n                    case \"end\":\n                        console.log(\"Workflow stream ended\");\n                        eventSource.close();\n                        setIsProcessing(false);\n                        break;\n\n                    default:\n                        console.log(\"Unknown message type:\", data.type);\n                        break;\n                }\n            };\n\n            eventSource.onerror = (error) => {\n                console.error(\"EventSource error:\", error);\n                eventSource.close();\n                setIsProcessing(false);\n                setError(\"Connection to server lost. Please try again.\");\n\n                // Mark all processing agents as failed\n                setProcessSteps((prev) =>\n                    prev.map((step) => ({\n                        ...step,\n                        status:\n                            step.status === \"processing\"\n                                ? \"connectivity_error\"\n                                : step.status,\n                    }))\n                );\n\n                setAgentOutputs((prev) =>\n                    prev.map((agent) => ({\n                        ...agent,\n                        status:\n                            agent.status === \"processing\"\n                                ? \"connectivity_error\"\n                                : agent.status,\n                        output:\n                            agent.status === \"processing\"\n                                ? \"üåê Connection lost during processing\"\n                                : agent.output,\n                    }))\n                );\n            };\n        } catch (error) {\n            console.error(\"Error setting up real-time connection:\", error);\n            setError(\"Failed to connect to AI service\");\n            setIsProcessing(false);\n        }\n\n        // Call the parent callback if provided\n        if (onRequestRecommendation) {\n            onRequestRecommendation(strategy);\n        }\n    };\n\n    const getStatusIcon = (status) => {\n        switch (status) {\n            case \"completed\":\n                return <CheckCircle size={20} style={{ color: \"#10b981\" }} />;\n            case \"processing\":\n                return (\n                    <Activity\n                        size={20}\n                        style={{ color: \"#3b82f6\" }}\n                        className=\"pulse\"\n                    />\n                );\n            case \"connectivity_error\":\n                return <AlertCircle size={20} style={{ color: \"#f59e0b\" }} />;\n            case \"error\":\n                return <AlertCircle size={20} style={{ color: \"#ef4444\" }} />;\n            default:\n                return <Clock size={20} style={{ color: \"#6b7280\" }} />;\n        }\n    };\n\n    const getStatusColor = (status) => {\n        switch (status) {\n            case \"completed\":\n                return \"#10b981\";\n            case \"processing\":\n                return \"#3b82f6\";\n            case \"connectivity_error\":\n                return \"#f59e0b\";\n            case \"error\":\n                return \"#ef4444\";\n            default:\n                return \"#6b7280\";\n        }\n    };\n\n    const formatDate = (dateString) => {\n        if (!dateString) return \"\";\n        return new Date(dateString).toLocaleString();\n    };\n\n    return (\n        <div className=\"strategy-detail-container\">\n            {/* Header */}\n            <div className=\"strategy-detail-header\">\n                <button onClick={onBack} className=\"back-button\">\n                    <ArrowLeft size={20} />\n                    Back to Dashboard\n                </button>\n                <h1 className=\"strategy-detail-title\">{strategy.title}</h1>\n            </div>\n\n            {/* Error Display */}\n            {error && (\n                <div\n                    className=\"error-banner\"\n                    style={{\n                        backgroundColor:\n                            error.includes(\"üåê\") || error.includes(\"‚è≥\")\n                                ? \"#f59e0b\"\n                                : \"#ef4444\",\n                        color: \"white\",\n                        padding: \"16px 20px\",\n                        borderRadius: \"12px\",\n                        margin: \"16px 0\",\n                        whiteSpace: \"pre-wrap\",\n                        fontSize: \"14px\",\n                        lineHeight: \"1.6\",\n                        border:\n                            error.includes(\"üåê\") || error.includes(\"‚è≥\")\n                                ? \"2px solid #fbbf24\"\n                                : \"2px solid #f87171\",\n                        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\n                    }}\n                >\n                    <div\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"flex-start\",\n                            gap: \"12px\",\n                        }}\n                    >\n                        <div style={{ fontSize: \"18px\", marginTop: \"2px\" }}>\n                            {error.includes(\"üåê\")\n                                ? \"üåê\"\n                                : error.includes(\"‚è≥\")\n                                ? \"‚è≥\"\n                                : error.includes(\"üîë\")\n                                ? \"üîë\"\n                                : \"‚ö†Ô∏è\"}\n                        </div>\n                        <div style={{ flex: 1 }}>\n                            {error}\n                            {(error.includes(\"üåê\") || error.includes(\"‚è≥\")) && (\n                                <div\n                                    style={{\n                                        marginTop: \"12px\",\n                                        fontSize: \"13px\",\n                                        opacity: 0.9,\n                                        fontStyle: \"italic\",\n                                    }}\n                                >\n                                    üí° This is usually a temporary issue. The AI\n                                    services may be experiencing high load or\n                                    connectivity problems.\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Three Column Layout with Bottom Panel */}\n            <div className=\"strategy-detail-content\">\n                {/* Main Row - Three Columns */}\n                <div className=\"strategy-detail-main-row\">\n                    {/* Left Column - Process Flow */}\n                    <div className=\"process-flow-column\">\n                        <div className=\"process-flow-header\">\n                            <h2>Process Flow</h2>\n                            <button\n                                onClick={handleRequestRecommendation}\n                                disabled={isProcessing}\n                                className=\"request-recommendation-button\"\n                                style={{\n                                    opacity: isProcessing ? 0.6 : 1,\n                                    cursor: isProcessing\n                                        ? \"not-allowed\"\n                                        : \"pointer\",\n                                }}\n                            >\n                                <Play size={16} />\n                                {isProcessing\n                                    ? \"Processing...\"\n                                    : \"Request Recommendation\"}\n                            </button>\n                        </div>\n\n                        <div className=\"process-flow-content\">\n                            {processSteps.map((step, index) => (\n                                <div key={step.id} className=\"process-step\">\n                                    <div className=\"process-step-indicator\">\n                                        <div\n                                            className=\"step-number\"\n                                            style={{\n                                                backgroundColor: getStatusColor(\n                                                    step.status\n                                                ),\n                                                color:\n                                                    step.status === \"pending\"\n                                                        ? \"#6b7280\"\n                                                        : \"white\",\n                                            }}\n                                        >\n                                            {step.status === \"pending\"\n                                                ? step.id\n                                                : getStatusIcon(step.status)}\n                                        </div>\n                                        {index < processSteps.length - 1 && (\n                                            <div\n                                                className=\"step-connector\"\n                                                style={{\n                                                    backgroundColor:\n                                                        step.status ===\n                                                        \"completed\"\n                                                            ? \"#10b981\"\n                                                            : \"#374151\",\n                                                }}\n                                            />\n                                        )}\n                                    </div>\n                                    <div className=\"process-step-content\">\n                                        <h3 className=\"step-title\">\n                                            {step.name}\n                                        </h3>\n                                        <p className=\"step-description\">\n                                            {step.description}\n                                        </p>\n                                        {step.timestamp && (\n                                            <span className=\"step-timestamp\">\n                                                {step.status === \"processing\"\n                                                    ? \"Started: \"\n                                                    : \"Completed: \"}\n                                                {formatDate(step.timestamp)}\n                                            </span>\n                                        )}\n                                        {step.status === \"processing\" && (\n                                            <div className=\"processing-indicator\">\n                                                <div className=\"processing-bar\">\n                                                    <div className=\"processing-bar-fill\"></div>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                    {/* Middle Column - Agent Outputs */}\n                    <div className=\"agent-output-column\">\n                        <div className=\"agent-output-header\">\n                            <h2>AI Agent Outputs</h2>\n                        </div>\n\n                        <div className=\"agent-outputs-container\">\n                            {agentOutputs.map((agent) => (\n                                <div\n                                    key={agent.id}\n                                    className={`agent-output-item ${agent.status}`}\n                                >\n                                    <div className=\"agent-output-title\">\n                                        <h4>\n                                            {getStatusIcon(agent.status)}\n                                            {agent.name}\n                                        </h4>\n                                        <span\n                                            className={`agent-status-badge ${agent.status}`}\n                                        >\n                                            {agent.status}\n                                        </span>\n                                    </div>\n\n                                    <div className=\"agent-output-content\">\n                                        {agent.status === \"processing\" ? (\n                                            <div className=\"typing-indicator\">\n                                                <span>Analyzing</span>\n                                                <div className=\"typing-dots\">\n                                                    <div className=\"typing-dot\"></div>\n                                                    <div className=\"typing-dot\"></div>\n                                                    <div className=\"typing-dot\"></div>\n                                                </div>\n                                            </div>\n                                        ) : agent.output ? (\n                                            <pre\n                                                style={{\n                                                    whiteSpace: \"pre-wrap\",\n                                                    fontFamily: \"inherit\",\n                                                    margin: 0,\n                                                    fontSize: \"13px\",\n                                                    lineHeight: \"1.4\",\n                                                }}\n                                            >\n                                                {agent.output}\n                                            </pre>\n                                        ) : (\n                                            <div className=\"agent-output-content empty\">\n                                                Waiting for analysis to begin...\n                                            </div>\n                                        )}\n                                    </div>\n\n                                    {agent.timestamp && (\n                                        <div className=\"agent-output-timestamp\">\n                                            {agent.status === \"processing\"\n                                                ? \"Started: \"\n                                                : \"Completed: \"}\n                                            {formatDate(agent.timestamp)}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                    {/* Right Column - Strategy Info */}\n                    <div className=\"strategy-info-column\">\n                        <div className=\"strategy-info-card\">\n                            <h3>Strategy Overview</h3>\n\n                            <div className=\"strategy-info-details\">\n                                <div className=\"info-item\">\n                                    <div className=\"info-label\">\n                                        <Coins size={16} />\n                                        Asset\n                                    </div>\n                                    <div className=\"info-value\">\n                                        {strategy.coin}\n                                    </div>\n                                </div>\n\n                                <div className=\"info-item\">\n                                    <div className=\"info-label\">\n                                        <DollarSign size={16} />\n                                        Amount\n                                    </div>\n                                    <div className=\"info-value\">\n                                        {strategy.currentAmount} {strategy.coin}\n                                    </div>\n                                </div>\n\n                                <div className=\"info-item\">\n                                    <div className=\"info-label\">\n                                        <TrendingUp size={16} />\n                                        Status\n                                    </div>\n                                    <div className=\"info-value\">\n                                        <span\n                                            className=\"status-badge\"\n                                            style={{\n                                                backgroundColor:\n                                                    strategy.status === \"active\"\n                                                        ? \"#10b981\"\n                                                        : strategy.status ===\n                                                          \"paused\"\n                                                        ? \"#f59e0b\"\n                                                        : \"#ef4444\",\n                                                color: \"white\",\n                                                padding: \"4px 8px\",\n                                                borderRadius: \"12px\",\n                                                fontSize: \"12px\",\n                                                textTransform: \"capitalize\",\n                                            }}\n                                        >\n                                            {strategy.status}\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div className=\"info-item\">\n                                    <div className=\"info-label\">\n                                        <Clock size={16} />\n                                        Created\n                                    </div>\n                                    <div className=\"info-value\">\n                                        {formatDate(strategy.createdAt)}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"strategy-description-section\">\n                                <h4>Description</h4>\n                                <p className=\"strategy-description-text\">\n                                    {strategy.description}\n                                </p>\n                            </div>\n\n                            {/* Last Recommendation */}\n                            {strategy.lastObeyedRecommendation &&\n                                strategy.lastObeyedRecommendation.message !==\n                                    \"No recommendations followed yet\" && (\n                                    <div className=\"last-recommendation\">\n                                        <h4>Last Recommendation</h4>\n                                        <div className=\"recommendation-content\">\n                                            <p>\n                                                {\n                                                    strategy\n                                                        .lastObeyedRecommendation\n                                                        .message\n                                                }\n                                            </p>\n                                            <div className=\"recommendation-meta\">\n                                                <span\n                                                    className=\"recommendation-type\"\n                                                    style={{\n                                                        color:\n                                                            strategy\n                                                                .lastObeyedRecommendation\n                                                                .recommendation ===\n                                                            \"buy\"\n                                                                ? \"#10b981\"\n                                                                : strategy\n                                                                      .lastObeyedRecommendation\n                                                                      .recommendation ===\n                                                                  \"sell\"\n                                                                ? \"#ef4444\"\n                                                                : \"#f59e0b\",\n                                                    }}\n                                                >\n                                                    {(\n                                                        strategy\n                                                            .lastObeyedRecommendation\n                                                            .recommendation ||\n                                                        \"\"\n                                                    ).toUpperCase()}\n                                                </span>\n                                                <span className=\"recommendation-date\">\n                                                    {formatDate(\n                                                        strategy\n                                                            .lastObeyedRecommendation\n                                                            .timestamp\n                                                    )}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                        </div>\n                    </div>\n                </div>\n\n                {/* Bottom Panel - Final Output Display */}\n                <div className=\"strategy-detail-bottom-panel\">\n                    <div className=\"final-output-panel\">\n                        <div className=\"final-output-header\">\n                            <h2>\n                                <Target size={24} />\n                                Final Investment Recommendation\n                            </h2>\n                            <div\n                                className={`final-output-status ${\n                                    finalRecommendation ? \"ready\" : \"waiting\"\n                                }`}\n                            >\n                                {finalRecommendation ? (\n                                    <>\n                                        <CheckCircle size={16} />\n                                        Ready\n                                    </>\n                                ) : (\n                                    <>\n                                        <Clock size={16} />\n                                        Waiting for Analysis\n                                    </>\n                                )}\n                            </div>\n                        </div>\n\n                        {finalRecommendation ? (\n                            <div className=\"final-output-content\">\n                                {/* Left Side - Recommendation Decision */}\n                                <div className=\"final-recommendation-card\">\n                                    <h3>\n                                        <Zap size={20} />\n                                        Investment Decision\n                                    </h3>\n\n                                    <div className=\"recommendation-decision\">\n                                        <div\n                                            className={`decision-action ${finalRecommendation.action.toLowerCase()}`}\n                                        >\n                                            {finalRecommendation.action}\n                                        </div>\n                                        <div className=\"decision-confidence\">\n                                            <span className=\"confidence-score\">\n                                                {finalRecommendation.confidence}\n                                                %\n                                            </span>\n                                            <div className=\"confidence-label\">\n                                                Confidence\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <p className=\"recommendation-summary-text\">\n                                        {finalRecommendation.summary}\n                                    </p>\n\n                                    {finalRecommendation.executionTime && (\n                                        <div className=\"execution-stats\">\n                                            <div className=\"stat-item\">\n                                                <span className=\"stat-label\">\n                                                    Execution Time:\n                                                </span>\n                                                <span className=\"stat-value\">\n                                                    {\n                                                        finalRecommendation.executionTime\n                                                    }\n                                                    ms\n                                                </span>\n                                            </div>\n                                            <div className=\"stat-item\">\n                                                <span className=\"stat-label\">\n                                                    Agents Used:\n                                                </span>\n                                                <span className=\"stat-value\">\n                                                    {\n                                                        finalRecommendation.agentsUsed\n                                                    }\n                                                </span>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"final-output-content\">\n                                <div\n                                    style={{\n                                        gridColumn: \"1 / -1\",\n                                        textAlign: \"center\",\n                                        padding: \"40px\",\n                                        color: \"#9ca3af\",\n                                    }}\n                                >\n                                    <Clock\n                                        size={48}\n                                        style={{\n                                            marginBottom: \"16px\",\n                                            opacity: 0.5,\n                                        }}\n                                    />\n                                    <h3\n                                        style={{\n                                            marginBottom: \"8px\",\n                                            color: \"#d1d5db\",\n                                        }}\n                                    >\n                                        Waiting for AI Analysis\n                                    </h3>\n                                    <p>\n                                        Click \"Request Recommendation\" to start\n                                        the analysis process. The final\n                                        recommendation will appear here once all\n                                        agents complete their analysis.\n                                    </p>\n                                </div>\n                            </div>\n                        )}\n\n                        {finalRecommendation && (\n                            <div className=\"final-output-timestamp\">\n                                Analysis completed on{\" \"}\n                                {formatDate(finalRecommendation.timestamp)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StrategyDetailView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}